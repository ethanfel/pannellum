<!DOCTYPE HTML>
<html>
<head>
  <title>pannellum embed example</title>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
  <style>
    .container {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      align-items: center;
    }

    .image-container {
      width: 512px;
      height: 512px;
      margin: 10px;
      border: 2px solid red;
    }

    .button {
      width: 40px;
      height: 516px;
      background-color: red;
    }
  </style>
</head>
<body>
  <div id="container"></div>

  <script>
    const container = document.getElementById('container');

    const observer = new IntersectionObserver((entries, observer) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const index = parseInt(entry.target.className.match(/\d+/)[0]);
          loadImages(index + 1, index + 10);
        }
      });
    });

    observer.observe(container.lastElementChild);

    function loadImages(startIndex, endIndex) {
      for (let i = startIndex - 10; i < startIndex; i++) {
        const imageContainer = document.querySelector(`.image-container-${i}`);
        if (imageContainer) {
          container.removeChild(imageContainer);
        }
      }

      for (let i = startIndex; i <= endIndex; i++) {
        const imageContainer = document.createElement('div');
        imageContainer.classList.add(`image-container`, `image-container-${i}`);
        const panoramaImage = `../../selected/${('0000' + i).slice(-4)}.jpg`;
        const previewImage = `../../selected/crop/crop_${('0000' + i).slice(-4)}.jpg`;
        imageContainer.style.backgroundImage = `url(${previewImage})`;
        const button = document.createElement('div');
        button.classList.add(`button`, `button-${i}`);
        button.innerHTML = `Image ${i + 1}`;
        button.addEventListener('click', function() {
          const isRed = imageContainer.style.borderColor === 'red';
          if (isRed) {
            imageContainer.style.borderColor = 'green';
            button.style.backgroundColor = 'green';
          } else {
            imageContainer.style.borderColor = 'red';
            button.style.backgroundColor = 'red';
          }
        });
        imageContainer.appendChild(button);
        container.appendChild(imageContainer);
      }
    }
  </script>
</body>
</html>
